---
import 'bootstrap/dist/css/bootstrap.css';
import 'mdb-ui-kit/css/mdb.min.css'
import 'font-awesome/css/font-awesome.min.css'
import Layout from '../../../layouts/Layout.astro'
import Result from '../../../components/Result.astro'
import Welcome from '../../../components/Welcome.astro'
import QuizNav from '../../../components/QuizNav.astro'
import SpeakParts from '../../../components/SpeakParts.astro'
import SpeakBody from '../../../components/SpeakBody.astro'
import SpeakLoader from '../../../components/SpeakLoader.astro'
---

<Layout title="Test 1">
 <SpeakLoader/>

 <Welcome/>

<div id="quizBar" class="hidden">

<QuizNav/>

<SpeakParts/>
 
 <SpeakBody/>
</div>
<Result/>
<audio id="audio"></audio>

<!------->
                   
                        <audio src="/static/audios/test1/part1/1.mp3" id="audio_1"></audio>
                        </div>
                        <audio src="/static/audios/test1/part1/2.mp3" id="audio_2"></audio>
                        <audio src="/static/audios/test1/part1/3.mp3" id="audio_3"></audio>
                        <audio src="/static/audios/test1/part1/4.mp3" id="audio_4"></audio>
                        <audio src="/static/audios/test1/part1/5.mp3" id="audio_5"></audio>
                        <audio src="/static/audios/test1/part1/6.mp3" id="audio_6"></audio>
                        <audio src="/static/audios/test1/part2/intro.mp3" id="audio_7"></audio>
                        <audio src="/static/audios/test1/part2/1.mp3" id="audio_8"></audio>
                        <audio src="/static/audios/test1/part3/intro.mp3" id="audio_9"></audio>
                        <audio src="/static/audios/test1/part3/1.mp3" id="audio_10"></audio>
                        <audio src="/static/audios/test1/part3/2.mp3" id="audio_11"></audio>
                        <audio src="/static/audios/test1/part3/3.mp3" id="audio_12"></audio>
                        <audio src="/static/audios/test1/part3/4.mp3" id="audio_13"></audio>
                        <audio src="/static/audios/test1/part3/5.mp3" id="audio_14"></audio>
                        <audio src="/static/audios/test1/part3/end.mp3" id="audio_15"></audio>
                        
                
</div>
</Layout>


<script is:inline>

const part1=document.getElementById("quizBar");
const markPage = document.getElementById("markpage");
const section1=document.getElementById("part1");
const section2=document.getElementById("part2")
const section3=document.getElementById("part3")
const welcome=document.getElementById("welcome")
const que=document.getElementById("question-bar");
const audio1=document.getElementById("audio_1");
const audio2=document.getElementById("audio_2");
const audio3=document.getElementById("audio_3");
const audio4=document.getElementById("audio_4");
const audio5=document.getElementById("audio_5");
const audio6=document.getElementById("audio_6");
const audio7=document.getElementById("audio_7");
const audio8=document.getElementById("audio_8");
const audio9=document.getElementById("audio_9");
const audio10=document.getElementById("audio_10");
const audio11=document.getElementById("audio_11");
const audio12=document.getElementById("audio_12");
const audio13=document.getElementById("audio_13");
const audio14=document.getElementById("audio_14");
const audio15=document.getElementById("audio_15");
const beep=document.getElementById("beep");
const timer=document.getElementById("timer");
const que_id=document.getElementById("que-id");
const audioPlayer=document.getElementById("audio")
part1.style.display="none";


//Recognition
var SpeechRecognition =  window.SpeechRecognition || window.webkitSpeechRecognition;
var recognition = new SpeechRecognition();
var textbox = document.getElementById("textbox");
var textboxVal=document.getElementById("hidden-textbox");
var score = document.getElementById("score");
var content = '';
let valueText;
var transcript;
let TextLength;

recognition.lang = "en-US";
recognition.continuous = true;
recognition.onresult = function(event) {
  var current = event.resultIndex;
  transcript = event.results[current][0].transcript;
var confidence = event.results[current][0].confidence;
 // Update the displayed content
content += capitalize(transcript) + '. ';
//Tashqi UI
textbox.innerHTML = content;
textboxVal.value=content
};



function startRecognition() {
if (content.length) {
  content += ' ';
}
recognition.start();
}

function stopRecognition(){
recognition.stop();

}

function calculateOverallScore() {
  evaluateVocabularyLevel(transcript);
var TextTrim=textboxVal.value.trim()
   TextLength=TextTrim.split(' ')
console.log(TextLength.length)
  
// Call the functions to display the information

  //checkGrammar()

 valueText = textbox.innerHTML;
 valueText= textboxVal.value
// Color certain words or phrases in the transcription
valueText = colorizeText(valueText, "festival", "red");
valueText = colorizeText(valueText, "celebrate", "blue");
valueText = colorizeText(valueText, "celebrated", "blue");
valueText = colorizeText(valueText, "firework", "red");
valueText = colorizeText(valueText, "sing", "red");
valueText = colorizeText(valueText, "favourite", "blue");
valueText = colorizeText(valueText, "dance", "red");
valueText = colorizeText(valueText, "have fun", "blue");
valueText = colorizeText(valueText, "family gathering", "orange");
valueText = colorizeText(valueText, "visit", "blue");
valueText = colorizeText(valueText, "relatives", "blue");
valueText = colorizeText(valueText, "family member", "blue");
valueText = colorizeText(valueText, "family members", "blue");
valueText=colorizeText(valueText, "holiday","red");
valueText=colorizeText(valueText, "holidays","red");
valueText=colorizeText(valueText, "food","red");
valueText=colorizeText(valueText, "foods","red");
valueText=colorizeText(valueText, "celebratory","orange");
valueText=colorizeText(valueText, "iconic","orange");
valueText=colorizeText(valueText, "diverse","orange");
valueText=colorizeText(valueText, "tradition","#00ff00");
valueText=colorizeText(valueText, "traditions","#00ff00");
valueText=colorizeText(valueText, "traditional","#00ff00");
valueText=colorizeText(valueText, "enthusiasm","blue");
valueText=colorizeText(valueText, "amusement","#00ff00");
valueText=colorizeText(valueText, "culture","#00ff00");
valueText=colorizeText(valueText, "cultural","#00ff00");

// ... Continue with the scoring or further analysis

// Example: Assign a score based on the analysis

// Display the modified transcription
textbox.innerHTML = valueText;
textboxVal.value=valueText

if(TextLength.length==0){
  score.innerHTML=0
}
else if (TextLength.length==5 || TextLength.length<=30) {
   let min = 1;
    let max = 5;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if(TextLength.length>=31 || TextLength.length<=80){
    let min = 6;
    let max = 15;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=81 || TextLength.length<=130 ) {
  let min = 15;
    let max = 25;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=131 || TextLength.length<=180 ) {
  let min = 25;
    let max = 30;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=181 || TextLength.length<=220 ) {
  let min = 30;
    let max = 35;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=221 || TextLength.length<=250 ) {
  let min = 35;
    let max = 40;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=251 || TextLength.length<=280 ) {
  let min = 40;
    let max = 55;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=281 || TextLength.length<=320 ) {
  let min = 55;
    let max = 60;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=321 || TextLength.length<=350 ) {
  let min = 61;
    let max = 63;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=351 || TextLength.length<=380 ) {
  let min = 63;
    let max = 65;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=381 || TextLength.length<=420 ) {
  let min = 65;
    let max = 68;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=421 || TextLength.length<=450 ) {
  let min = 68;
    let max = 70;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=451 || TextLength.length<=480 ) {
  let min = 70;
    let max = 72;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else if (TextLength.length>=481 || TextLength.length<=520 ) {
  let min = 73;
    let max = 74;
    let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  score.innerHTML=randomBand
}
else{
  score.innerHTML=75
}

}


function capitalize(sentence) {
return sentence.charAt(0).toUpperCase() + sentence.slice(1);
}

function colorizeText(text, word, color) {
// Use HTML markup to add color to the specified word or phrase
var pattern = new RegExp("\\b" + word + "\\b", "gi");
var replacement = "<span style='font-weight:bold;color: " + color + "'>" + word + "</span>";
return text.replace(pattern, replacement);
}

function checkGrammar(){
  
const apiKey = 'b0kj6Kg30fSduKSq';
const text = TextLength.value;
const language = 'en-GB';

const url = `https://api.textgears.com/grammar?key=${apiKey}&text=${encodeURIComponent(text)}&language=${language}`;

fetch(url)
.then(response => response.json())
.then(data => {
  // Process the response data here
  console.log(data.response)
 
})
.catch(error => {
  // Handle any errors that occur during the request
  console.error(error);
});
}


//Vocabulary strength

var vocabulary = {
"A2": [
  "festival",
  "holiday",
  "food",
  "foods",
  "meal",
  "meals",
  "dance",
  "party",
  "firework",
  "national",
  "domestic",
  "favourite",
  "holiday",
  "sing"
],
"B1": [
  "visit",
  "relative",
  "relatives",
  "have fun",
  "travel",
  "travelling",
  "celebrate",
  "celebrated",
],
"B2": [
  "tradition",
  "traditions",
  "traditional",
  "culture",
  "cultures",
  "cultural",
  "family gathering",
  "family gatherings"
],
"C1": [
  "diverse",
  "amusement",
  "enthusiasm"
]
};


function evaluateVocabularyLevel(TextLength) {
var words = TextLength.toLowerCase().split(' ');
console.log("words: "+words)
var vocabularyLevels = Object.keys(vocabulary);
var matchedLevels = [];

for (var i = 0; i < vocabularyLevels.length; i++) {
  var level = vocabularyLevels[i];
  var levelVocabulary = vocabulary[level];
  var matchedWords = [];

  for (var j = 0; j < levelVocabulary.length; j++) {
    var word = levelVocabulary[j].toLowerCase();
    if (words.includes(word)) {
      matchedWords.push(word);
    }
  }

  if (matchedWords.length > 0) {
    matchedLevels.push({ level: level, words: matchedWords });
  }
}

/*
displayVocabularyLevels(matchedLevels);
}

function displayVocabularyLevels(levels) {


for (var i = 0; i < levels.length; i++) {
  var level = levels[i].level;
  var words = levels[i].words;
  CefrLevel.innerHTML = level;
  CefrWords.innerHTML = words.join(', ');
}
*/
}

	
	
//Recorder
let audioStream, mediaRecorder, chunks;
let isRecording = false;

// Handle start event
      async function startRec(){
        try {
          // Request access to audio media
          audioStream = await navigator.mediaDevices.getUserMedia({ audio: true });

          // Create MediaRecorder object
          mediaRecorder = new MediaRecorder(audioStream);

          // Initialize chunks array to store recorded data
          chunks = [];

          // Event handler for dataavailable event
          mediaRecorder.addEventListener('dataavailable', (e) => {
            chunks.push(e.data);
          });

         
          const timeSlice = 1000;

          mediaRecorder.mimeType = 'audio/mp3' ;
          mediaRecorder.audioBitsPerSecond = 44100;
          mediaRecorder.start(timeSlice);

          isRecording = true;
        } catch (error) {
          console.log('Error accessing microphone:', error);
        }
      };

      // Handle stop button click event
      function stopRec(){
        // Stop recording
        mediaRecorder.stop();
        isRecording = false;

        // Create audio element and play recorded audio
        const blob = new Blob(chunks, { type: mediaRecorder.mimeType });
        const audioURL = URL.createObjectURL(blob);
        audioPlayer.src = audioURL;
      };

      // Handle pause 
      function pauseRecord(){
        if (isRecording) {
          // Pause recording
          mediaRecorder.pause();

          isRecording = false;
        }
      };

      // Handle continue button click event
      function continueRecord(){
        if (!isRecording) {
          // Continue recording
          mediaRecorder.resume();

          isRecording = true;
        }
      }




//Scale UpandDown
var TextSize=document.getElementById("question-bar");
 function sizeUp(){
    var style = window.getComputedStyle(TextSize, null).getPropertyValue('font-size');
    var fontSize = parseFloat(style);
    TextSize.style.fontSize=(fontSize+1)+'px'
 }

 function sizeDown(){
    var style = window.getComputedStyle(TextSize, null).getPropertyValue('font-size');
    var fontSize = parseFloat(style);
    TextSize.style.fontSize=(fontSize-1)+'px'
 }

 //Fullscreen
 function toggleFullScreen() {
	if (!document.fullscreenElement) {
	  document.documentElement.requestFullscreen();
	  document.getElementById("full-screen").innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M9 9V4.5M9 9H4.5M9 9L3.75 3.75M9 15v4.5M9 15H4.5M9 15l-5.25 5.25M15 9h4.5M15 9V4.5M15 9l5.25-5.25M15 15h4.5M15 15v4.5m0-4.5l5.25 5.25" />
</svg>
`
	} else if (document.exitFullscreen) {
	  document.exitFullscreen();
	 document.getElementById("full-screen").innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15" />
</svg>
`
	}
  }
  


//Step1
function step0() {
	welcome.style.display="none";
	part1.style.display="block"
	que.innerHTML="What is your favourite festival?";
	que_id.innerHTML=1
	audio1.play();
	audio1.addEventListener("ended", startCountdown)

	// Define a function to start the 5-second countdown
function startCountdown() {
	let count = 5;
	timer.innerHTML += `${count} seconds`;
	const interval = setInterval(() => {
	  count--;
	  timer.innerHTML = `${count} seconds`;
	  if (count <= 0) {
		beep.play();
		clearInterval(interval);
		start30SecondCountdown();
		startRec();
	  }
	}, 1000);
  }

	// Define a function to start the 30-second countdown
	function start30SecondCountdown() {
	  startRecognition()
		let count = 30;
		timer.innerHTML = ` ${count}  LEFT`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} LEFT`;
		  if (count <= 0) {
			timer.innerHTML="";
			clearInterval(interval);
			step1();
			stopRecognition()
			pauseRecord()
		  }
		}, 1000);
	  }
	
}

//Step1 fun

function step1(){
	que.innerHTML="How do you celebrate the festival?";
	que_id.innerHTML=2
	audio2.play();
	audio2.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		  startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step2();
		    stopRecognition()
			pauseRecord()
			  }
			}, 1000);
		  }
}


//step2

function step2(){
	que.innerHTML="What is the most popular festival in your country?";
	que_id.innerHTML=3
	audio3.play();
	audio3.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step3();
				stopRecognition()
				pauseRecord()
			  }
			}, 1000);
		  }
}

//step3

function step3(){
	que.innerHTML="Do you like western festivals?";
	que_id.innerHTML=4
	audio4.play();
	audio4.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		  startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step4();
		    stopRecognition()
			pauseRecord()
			  }
			}, 1000);
		  }
}


//step4

function step4(){
	que.innerHTML="Where do people usually go during festivals?";
	que_id.innerHTML=5
	audio5.play();
	audio5.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		  startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step5();
		    stopRecognition()
			pauseRecord()
			  }
			}, 1000);
		  }
}


//step5

function step5(){
	que.innerHTML="With whom do you like to celebrate festivals?";
	que_id.innerHTML=6
	audio6.play();
	audio6.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
			startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				part2();
		    stopRecognition()
			pauseRecord()
			  }
			}, 1000);
		  }
}


//part2 intro

function part2(){
	que.innerHTML='';
	que_id.innerHTML=''
	audio7.play();
	section1.innerHTML=`<i class="fa fa-check-circle"></i>`;
	section2.classList.add("bg-emerald-400");
	audio7.addEventListener("ended", step6);
}

//step6

function step6(){
	que.innerHTML=`<p><b>Describe a piece of technology that you use a lot.</b></p><p>You should say:</p><ul><li>What is it?</li><li>What you use it for</li><li>how long you have been using it</li><li>and say how you would feel without it</li></ul><br><textarea class="form-control" id="exampleFormControlTextarea1" rows="3" placeholder="Izoh yozish uchun"></textarea>`;
	que_id.innerHTML=7
	audio8.play();
	audio8.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 60;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		  startRecognition()
			let count = 120;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				part3();
				stopRecognition()
				pauseRecord()

			  }
			}, 1000);
		  }
}


//part3 intro

function part3(){
	que.innerHTML='';
	que_id.innerHTML=''
	audio9.play();
	section2.innerHTML=`<i class="fa fa-check-circle"></i>`;
	section3.classList.add("bg-emerald-400");
	audio9.addEventListener("ended", step7);
}


//step7


function step7(){
	que.innerHTML="In your opinion, is technology making people's lives easier?";
	que_id.innerHTML=8
	audio10.play();
	audio10.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		  startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step8();
		    stopRecognition()
			pauseRecord()

			  }
			}, 1000);
		  }
}




//step8

function step8(){
	que.innerHTML="What kinds of modern technology do people rely on their daily life?";
	que_id.innerHTML=9
	audio11.play();
	audio11.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		  startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step9();
		    stopRecognition()
			pauseRecord()

			  }
			}, 1000);
		  }
}


//step9

function step9(){
	que.innerHTML="How much has technology improved and how we communicate with each other?";
	que_id.innerHTML=10
	audio12.play();
	audio12.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
			startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step10();
		    stopRecognition()
			pauseRecord()

			  }
			}, 1000);
		  }
}


//step10

function step10(){
	que.innerHTML="Do you think that the advance of technology has improved standards of education in schools?";
	que_id.innerHTML=11
	audio13.play();
	audio13.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
			startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				step11();
		    stopRecognition()
			pauseRecord()
			  }
			}, 1000);
		  }
}


//step11


function step11(){
	que.innerHTML="Do you think people rely too much on technology today?";
	que_id.innerHTML=12
	audio14.play();
	audio14.addEventListener("ended", startCountdown);
	//countdown 5 sec
	function startCountdown() {
		let count = 5;
		timer.innerHTML += `${count} seconds`;
		const interval = setInterval(() => {
		  count--;
		  timer.innerHTML = `${count} seconds`;
		  if (count <= 0) {
			beep.play();
			clearInterval(interval);
			start30SecondCountdown();
			continueRecord()
		  }
		}, 1000);
	  }
	
		// Define a function to start the 30-second countdown
		function start30SecondCountdown() {
		  startRecognition()
			let count = 30;
			timer.innerHTML = ` ${count} sec LEFT`;
			const interval = setInterval(() => {
			  count--;
			  timer.innerHTML = `${count} sec LEFT`;
			  if (count <= 0) {
				timer.innerHTML="";
				clearInterval(interval);
				examEnd();
				stopRecognition()
				pauseRecord()
		
			  }
			}, 1000);
		  }
}

function examEnd(){
	audio15.play();
	que.innerHTML='';
	que_id.innerHTML='';
    section3.innerHTML=`<i class="fa fa-check-circle"></i>`
	audio15.addEventListener("ended",function(){
		stopRec();
		part1.style.display="none";
		document.getElementById("alert-time").classList.remove("hidden")
    startCountdownend()

});		
}

function startCountdownend() {
		let count = 40;
		const interval = setInterval(() => {
		  count--;
	        const alertTime=document.getElementById("alert-timer")
	        alertTime.innerHTML= count;
		  if (count <= 0) {
			clearInterval(interval);
			  document.getElementById("alert-time").classList.add("hidden")
        document.getElementById("scorepage").classList.remove("hidden");
        calculateOverallScore()
		  }
		}, 1000);
    }



   document.getElementById("audio-player").addEventListener("click", ()=>{
     audioPlayer.play()
   }) 




</script>
