---
import 'bootstrap/dist/css/bootstrap.css';
import 'mdb-ui-kit/css/mdb.min.css'
import 'font-awesome/css/font-awesome.min.css'
import Layout from '../../layouts/Layout.astro'
import Result from '../../components/Result.astro'
import Welcome from '../../components/Welcome.astro'
import QuizNav from '../../components/QuizNav.astro'
import SpeakParts from '../../components/SpeakParts.astro'
import SpeakBody from '../../components/SpeakBody.astro'
import SpeakLoader from '../../components/SpeakLoader.astro'
---

<Layout title="Test">
 <SpeakLoader/>

 <Welcome/>

<div id="quizBar" class="hidden">

<QuizNav/>

<SpeakParts/>
 
 <SpeakBody/>
</div>
<Result/>
<audio id="audio"></audio>
<audio id="audio2"></audio>
<audio id="audio3"></audio>
<audio id="tran-audio"></audio>

                   
                       
                
</div>
</Layout>


<style>
input[type='range'] {
    overflow: hidden;
    width: 80px;
    appearance: none;
    background-color: #eeeeee;
  }
  
  input[type='range']::-webkit-slider-runnable-track {
    height: 10px;
    appearance: none;
    color: #13bba4;
    margin-top: -1px;
  }
  
  input[type='range']::-webkit-slider-thumb {
    width: 10px;
    appearance: none;
    height: 10px;
    cursor: ew-resize;
    background: #434343;
    box-shadow: -80px 0 0 80px #292929;
  }


</style>
<script src="https://www.WebRTC-Experiment.com/RecordRTC.js" is:inline></script>
<script src="https://examonline.app/static/jquery.min.js" is:inline></script>
<script is:inline>

var currectQuestionIndex=0
const id = new URLSearchParams(window.location.search).get("id");
var audioElement=document.getElementById("audio")
var audioTrans=document.getElementById("tran-audio")
var timerCount = 0; // Variable to store the timer count

// Function to save state to local storage
function saveState() {
  localStorage.setItem("currentQuestionIndex", currectQuestionIndex);
  localStorage.setItem("timerCount", timerCount);
}

// Function to load state from local storage
function loadState() {
  var savedIndex = localStorage.getItem("currentQuestionIndex");
  var savedTimerCount = localStorage.getItem("timerCount");
  if (savedIndex !== null) {
    currectQuestionIndex = parseInt(savedIndex);
  }
  if (savedTimerCount !== null) {
    timerCount = parseInt(savedTimerCount);
  }
}


const renderdetails= async ()=>{
    const res= await fetch('https://blog-seven-bay.vercel.app/speaking/'+ id);
    var data= await res.json();
//Start btn begin

$("#start-btn").click(()=>{
$("#welcome").hide()
$("#quizBar").show()
audioElement.play()
})
//Start btn end



//ShowNextQuestion

function showNextQuestion(){
currectQuestionIndex++
if(currectQuestionIndex === data.questions[0].part1.length){
console.log("Part1 ended")
showNextPart()
return
}
audioElement.src=data.questions[0].part1[currectQuestionIndex].audio
$("#question-bar").html(data.questions[0].part1[currectQuestionIndex].question)
$("#que-id").html(data.questions[0].part1[currectQuestionIndex].number)
// Check if the audio element is paused before playing the new audio
    audioElement.play();

// Reset the timer count
    timerCount = 0;

    //Save the current state to local storage
   saveState();
}

audioElement.addEventListener("ended", ()=>{
var count = 5;
        $("#timer").html(`${count} seconds`);
        var interval = setInterval(() => {
          count--;
          $("#timer").html(`${count} seconds`);
          if (count <= 0) {
	    $("#timer").html("-:-")
            document.getElementById("beep").play();
	    document.getElementById("beep").addEventListener("ended", ()=>{
		var count = 30;
         $("#timer").html(`${count} seconds`);
        var interval = setInterval(() => {
          count--;
           $("#timer").html(`${count} seconds`);
            if (count <= 0) {
             $("#timer").html("");
            clearInterval(interval);
            showNextQuestion();
          }  
        }, 1000)
	    })
            clearInterval(interval);
          }
        }, 1000)
 // Save the timer count to local storage
   timerCount = count;
    saveState();
})



function showNextPart(){
audioTrans.src="/static/audios/test1/part2/intro.mp3"
audioTrans.play()
$("#question-bar").html("")
$("#que-id").html("")

audioTrans.addEventListener("ended", beginPartTwo)
function beginPartTwo(){
document.getElementById("audio2").src=data.questions[0].part2[0].audio
$("#question-bar").html(data.questions[0].part2[0].question)
$("#que-id").html(data.questions[0].part2[0].number)
 document.getElementById("audio2").play();
}

document.getElementById("audio2").addEventListener("ended", startCount)
function startCount(){
var counter = 60;
        $("#timer").html(`${counter} seconds`);
        var interval2 = setInterval(() => {
          counter--;
          $("#timer").html(`${counter} seconds`);
          if (counter <= 0) {
	    $("#timer").html("-:-")
            document.getElementById("beep2").play();
	    document.getElementById("beep2").addEventListener("ended", ()=>{
		var counter = 120;
         $("#timer").html(`${counter} seconds`);
        var interval2 = setInterval(() => {
          counter--;
           $("#timer").html(`${counter} seconds`);
            if (counter <= 0) {
             $("#timer").html("");
            clearInterval(interval2);
	    showLastPart()
            return
          }  
        }, 1000)
	    })
            clearInterval(interval2);
          }
        }, 1000)

}

}



//Part 3 Questions

function showLastPart(){
var currectQuestion=0
//ShowLastQuestion starts here
function showLastQuestion(){
currectQuestion++
if(currectQuestion === data.questions[0].part3.length){
console.log("Part3 ended")
return
}
document.getElementById("audio3").src=data.questions[0].part3[currectQuestion].audio
$("#question-bar").html(data.questions[0].part3[currectQuestion].question)
$("#que-id").html(data.questions[0].part3[currectQuestion].number)
// Check if the audio element is paused before playing the new audio
document.getElementById("audio3").play();

}
//ShowLastQuestion ends here

//Audio Part 3

document.getElementById("audio3").addEventListener("ended", startCounter)
function startCounter(){
var counter2 = 5;
        $("#timer").html(`${counter2} seconds`);
        var interval3 = setInterval(() => {
          counter2--;
          $("#timer").html(`${counter2} seconds`);
          if (counter2 <= 0) {
	    $("#timer").html("-:-")
            document.getElementById("beep3").play();
	    document.getElementById("beep3").addEventListener("ended", ()=>{
		var counter2 = 30;
         $("#timer").html(`${counter2} seconds`);
        var interval3 = setInterval(() => {
          counter2--;
           $("#timer").html(`${counter2} seconds`);
            if (counter2 <= 0) {
             $("#timer").html("");
            clearInterval(interval3);
            showLastQuestion()
          }  
        }, 1000)
	    })
            clearInterval(interval3);
          }
        }, 1000)

}

//Initializer Part 3 
document.getElementById("audio3").src=data.questions[0].part3[currectQuestion].audio
$("#question-bar").html(data.questions[0].part3[currectQuestion].question)
$("#que-id").html(data.questions[0].part3[currectQuestion].number)
 document.getElementById("audio3").play();

}



  //Intialize function
$(document).ready(function(){
   loadState();
audioElement.src=data.questions[0].part1[currectQuestionIndex].audio
$("#question-bar").html(data.questions[0].part1[currectQuestionIndex].question)
$("#que-id").html(data.questions[0].part1[currectQuestionIndex].number)
})

//Intialize function ends here
}

//DomLoad
window.addEventListener("DOMContentLoaded", ()=> renderdetails())

//DomLoad ends here


//Scale UpandDown
var TextSize=document.getElementById("question-bar");
 function sizeUp(){
    var style = window.getComputedStyle(TextSize, null).getPropertyValue('font-size');
    var fontSize = parseFloat(style);
    TextSize.style.fontSize=(fontSize+1)+'px'
 }

 function sizeDown(){
    var style = window.getComputedStyle(TextSize, null).getPropertyValue('font-size');
    var fontSize = parseFloat(style);
    TextSize.style.fontSize=(fontSize-1)+'px'
 }

 //Fullscreen
 function toggleFullScreen() {
	if (!document.fullscreenElement) {
	  document.documentElement.requestFullscreen();
	  document.getElementById("full-screen").innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M9 9V4.5M9 9H4.5M9 9L3.75 3.75M9 15v4.5M9 15H4.5M9 15l-5.25 5.25M15 9h4.5M15 9V4.5M15 9l5.25-5.25M15 15h4.5M15 15v4.5m0-4.5l5.25 5.25" />
</svg>
`
	} else if (document.exitFullscreen) {
	  document.exitFullscreen();
	 document.getElementById("full-screen").innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
  <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15" />
</svg>
`
	}
  }



</script>
