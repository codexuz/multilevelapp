---
import 'font-awesome/css/font-awesome.min.css'
---
<style>

 button{
            cursor: pointer;
        }

        #record{
            background: white;
            color: black;
            padding: 6px 12px;
            border: 1px solid white;
            border-radius: 30px;
        }

         #stop{
            background: red;
            color: white;
            padding: 6px 12px;
            border: 1px solid red;
            border-radius: 30px;
        }

        #bar{
            width: 100%;
            height: 80px;
            border: 1px solid transparent;
            display: flex;
            position: fixed;
            bottom: 0;
            left: 0;
            justify-content: center;
            align-items: center;
            margin-top: 150px;
            user-select: none;
            z-index:9999
       }
        #player{
            user-select: none;
            margin-top: 150px;
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 80px;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index:9999
        }
        
      

        .mic{
            position: fixed;
            cursor: pointer;
            right: 15px;
            bottom: 100px;
            color: white;
            z-index:5 ;
            user-select: none;
            
        }


</style>


<!---Mic starts here---->
<button class=" flex mic p-2 rounded-full shadow-lg border-2 border-rose-800 bg-rose-600">
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-8 h-8">
  <path d="M8.25 4.5a3.75 3.75 0 117.5 0v8.25a3.75 3.75 0 11-7.5 0V4.5z" />
  <path d="M6 10.5a.75.75 0 01.75.75v1.5a5.25 5.25 0 1010.5 0v-1.5a.75.75 0 011.5 0v1.5a6.751 6.751 0 01-6 6.709v2.291h3a.75.75 0 010 1.5h-7.5a.75.75 0 010-1.5h3v-2.291a6.751 6.751 0 01-6-6.709v-1.5A.75.75 0 016 10.5z" />
</svg>

</button>    
<div id="bar" class="bg-gray-800 hidden">
    <div class="status-bar">
    <button id="record">Record answer</button>
    </div>
    <button id="stop">Stop record...</button>
</div>
<div id="player" class="bg-gray-800 hidden">
    <svg id="play" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-10 h-10 text-white mx-2">
  <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm14.024-.983a1.125 1.125 0 010 1.966l-5.603 3.113A1.125 1.125 0 019 15.113V8.887c0-.857.921-1.4 1.671-.983l5.603 3.113z" clip-rule="evenodd" />
</svg>
 <svg id="cancel" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-10 h-10 text-white mx-2">
  <path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z" clip-rule="evenodd" />
</svg>

</div>
<audio src="" id="preview" controls onended="hiddenIcon()"></audio>


<script is:inline>

//Variables
const preview = document.getElementById("preview");
const stopBtn=document.getElementById("stop")
//const save=document.getElementById("save")
const recBtn=document.getElementById("record");
const player=document.getElementById("player");
const bar=document.getElementById("bar");
const status=document.getElementById("status")
const cancelBtn=document.getElementById("cancel")

//Mini funksiyalar
preview.style.display="none";
bar.style.display="none"
stopBtn.style.display="none";
//save.addEventListener("click", downloadRecording)
stopBtn.addEventListener("click", stopRecording);  
recBtn.addEventListener("click", startRecording)
player.style.display="none";


document.querySelector(".mic").addEventListener("click", function(){
    if(bar.style.display=="none"){
        bar.style.display="flex";
    }
    else{
        bar.style.display="none";
    }
    
    stopBtn.style.display="none";
    recBtn.style.display="block"
});

//Stop Btn

stopBtn.addEventListener("click", function(){
   player.style.display="flex";
   bar.style.display="none";
});

//Play function
document.getElementById("play").addEventListener("click", function(){
    var audio=document.getElementById("preview")
    if (audio.paused || audio.ended) {
       audio.play();
       document.getElementById("play").innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-10 h-10 text-white mx-2">
  <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM9 8.25a.75.75 0 00-.75.75v6c0 .414.336.75.75.75h.75a.75.75 0 00.75-.75V9a.75.75 0 00-.75-.75H9zm5.25 0a.75.75 0 00-.75.75v6c0 .414.336.75.75.75H15a.75.75 0 00.75-.75V9a.75.75 0 00-.75-.75h-.75z" clip-rule="evenodd" />
</svg>`

    }
    else{
        audio.pause();
        document.getElementById("play").innerHTML=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-10 h-10 text-white mx-2">
  <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm14.024-.983a1.125 1.125 0 010 1.966l-5.603 3.113A1.125 1.125 0 019 15.113V8.887c0-.857.921-1.4 1.671-.983l5.603 3.113z" clip-rule="evenodd" />
</svg>`


    }
});

function hiddenIcon(){
    document.getElementById("play").innerHTML=`<svg id="play" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-10 h-10 text-white mx-2">
  <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm14.024-.983a1.125 1.125 0 010 1.966l-5.603 3.113A1.125 1.125 0 019 15.113V8.887c0-.857.921-1.4 1.671-.983l5.603 3.113z" clip-rule="evenodd" />
</svg>`
};
    


//Clear cancelBtn

cancelBtn.addEventListener("click", function(){
 player.style.display="none"
});

//Start record

  // Start Btn recStart
recBtn.addEventListener("click", function(){
  recBtn.style.display = "none";
  stopBtn.style.display = "block";
  startRecording();
});



let recordedChunks = [];
let audio_stream;
let recorder;

// Start record
function startRecording() {
  navigator.mediaDevices.getUserMedia({ audio: true })
    .then(function (stream) {
      audio_stream = stream;
      recorder = new MediaRecorder(stream);

      // when there is data, compile into object for preview src
      recorder.ondataavailable = function (e) {
        recordedChunks.push(e.data);
        const url = URL.createObjectURL(e.data);
        preview.src = url;

      };
      recorder.start();
    });
}

/*
function downloadRecording() {
  const blob = new Blob(recordedChunks, { type: 'audio/webm' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = 'recording.webm';
  a.click();
}
*/






//rec stop

function stopRecording() {
    recorder.stop();
    audio_stream.getAudioTracks()[0].stop();
}


</script>
