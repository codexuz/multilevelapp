<div class="mb-5 w-full p-8 bg-white rounded-lg border-2 border-indigo-300 shadow-lg">
    <p id="textbox"></p>
    <textarea style="display: none;" name="" id="hidden-textbox" cols="30" rows="10"></textarea>
</div>

<script is:inline>

//Recognition
var SpeechRecognition =  window.SpeechRecognition || window.webkitSpeechRecognition;
var recognition = new SpeechRecognition();
var textbox = document.getElementById("textbox");
var textboxVal=document.getElementById("hidden-textbox");
var score = document.getElementById("score");
var content = '';
let valueText;
var transcript;
let TextLength;

recognition.lang = "en-US";

recognition.onresult = function(event) {
    var current = event.resultIndex;
    transcript = event.results[current][0].transcript;
  var confidence = event.results[current][0].confidence;
   // Update the displayed content
  content += capitalize(transcript) + '. ';
  //Tashqi UI
  textbox.innerHTML = content;
  textboxVal.value=content
};



function startRecognition() {
  if (content.length) {
    content += ' ';
  }
  recognition.start();
}

function stopRecognition(){
  recognition.stop();

}

function calculateOverallScore() {
    evaluateVocabularyLevel(transcript);
 var TextTrim=textboxVal.value.trim()
     TextLength=TextTrim.split(' ')
  console.log(TextLength.length)
    
// Call the functions to display the information

    //checkGrammar()

   valueText = textbox.innerHTML;
   valueText= textboxVal.value
  // Color certain words or phrases in the transcription
  valueText = colorizeText(valueText, "festival", "red");
  valueText = colorizeText(valueText, "celebrate", "blue");
  valueText = colorizeText(valueText, "celebrated", "blue");
  valueText = colorizeText(valueText, "firework", "red");
  valueText = colorizeText(valueText, "sing", "red");
  valueText = colorizeText(valueText, "favourite", "blue");
  valueText = colorizeText(valueText, "dance", "red");
  valueText = colorizeText(valueText, "have fun", "blue");
  valueText = colorizeText(valueText, "family gathering", "orange");
  valueText = colorizeText(valueText, "visit", "blue");
  valueText = colorizeText(valueText, "relatives", "blue");
  valueText = colorizeText(valueText, "family member", "blue");
  valueText = colorizeText(valueText, "family members", "blue");
  valueText=colorizeText(valueText, "holiday","red");
  valueText=colorizeText(valueText, "holidays","red");
  valueText=colorizeText(valueText, "food","red");
  valueText=colorizeText(valueText, "foods","red");
  valueText=colorizeText(valueText, "celebratory","orange");
  valueText=colorizeText(valueText, "iconic","orange");
  valueText=colorizeText(valueText, "diverse","orange");
  valueText=colorizeText(valueText, "tradition","#00ff00");
  valueText=colorizeText(valueText, "traditions","#00ff00");
  valueText=colorizeText(valueText, "traditional","#00ff00");
  valueText=colorizeText(valueText, "enthusiasm","blue");
  valueText=colorizeText(valueText, "amusement","#00ff00");
  valueText=colorizeText(valueText, "culture","#00ff00");
  valueText=colorizeText(valueText, "cultural","#00ff00");

  // ... Continue with the scoring or further analysis

  // Example: Assign a score based on the analysis

  // Display the modified transcription
  textbox.innerHTML = valueText;
  textboxVal.value=valueText

  if(TextLength.length==0){
  	score.innerHTML=0
  }
  else if (TextLength.length==5 || TextLength.length<=30) {
     let min = 1;
      let max = 5;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
  	score.innerHTML=randomBand
  }
  else if(TextLength.length>=31 || TextLength.length<=80){
      let min = 6;
      let max = 15;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=81 || TextLength.length<=130 ) {
    let min = 15;
      let max = 25;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=131 || TextLength.length<=180 ) {
  	let min = 25;
      let max = 30;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=181 || TextLength.length<=220 ) {
  	let min = 30;
      let max = 35;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=221 || TextLength.length<=250 ) {
    let min = 35;
      let max = 40;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=251 || TextLength.length<=280 ) {
    let min = 40;
      let max = 55;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=281 || TextLength.length<=320 ) {
    let min = 55;
      let max = 60;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=321 || TextLength.length<=350 ) {
    let min = 61;
      let max = 63;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=351 || TextLength.length<=380 ) {
    let min = 63;
      let max = 65;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=381 || TextLength.length<=420 ) {
    let min = 65;
      let max = 68;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=421 || TextLength.length<=450 ) {
    let min = 68;
      let max = 70;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=451 || TextLength.length<=480 ) {
    let min = 70;
      let max = 72;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else if (TextLength.length>=481 || TextLength.length<=520 ) {
    let min = 73;
      let max = 74;
      let randomBand = Math.floor(Math.random() * (max - min + 1)) + min;
    score.innerHTML=randomBand
  }
  else{
  	score.innerHTML=75
  }

}


function capitalize(sentence) {
  return sentence.charAt(0).toUpperCase() + sentence.slice(1);
}

function colorizeText(text, word, color) {
  // Use HTML markup to add color to the specified word or phrase
  var pattern = new RegExp("\\b" + word + "\\b", "gi");
  var replacement = "<span style='font-weight:bold;color: " + color + "'>" + word + "</span>";
  return text.replace(pattern, replacement);
}

function checkGrammar(){
    
const apiKey = 'b0kj6Kg30fSduKSq';
const text = TextLength.value;
const language = 'en-GB';

const url = `https://api.textgears.com/grammar?key=${apiKey}&text=${encodeURIComponent(text)}&language=${language}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // Process the response data here
    console.log(data.response)
   
  })
  .catch(error => {
    // Handle any errors that occur during the request
    console.error(error);
  });
}


//Vocabulary strength

var vocabulary = {
  "A2": [
    "festival",
    "holiday",
    "food",
    "foods",
    "meal",
    "meals",
    "dance",
    "party",
    "firework",
    "national",
    "domestic",
    "favourite",
    "holiday",
    "sing"
  ],
  "B1": [
    "visit",
    "relative",
    "relatives",
    "have fun",
    "travel",
    "travelling",
    "celebrate",
    "celebrated",
  ],
  "B2": [
    "tradition",
    "traditions",
    "traditional",
    "culture",
    "cultures",
    "cultural",
    "family gathering",
    "family gatherings"
  ],
  "C1": [
    "diverse",
    "amusement",
    "enthusiasm"
  ]
};


function evaluateVocabularyLevel(TextLength) {
  var words = TextLength.toLowerCase().split(' ');
  console.log("words: "+words)
  var vocabularyLevels = Object.keys(vocabulary);
  var matchedLevels = [];

  for (var i = 0; i < vocabularyLevels.length; i++) {
    var level = vocabularyLevels[i];
    var levelVocabulary = vocabulary[level];
    var matchedWords = [];

    for (var j = 0; j < levelVocabulary.length; j++) {
      var word = levelVocabulary[j].toLowerCase();
      if (words.includes(word)) {
        matchedWords.push(word);
      }
    }

    if (matchedWords.length > 0) {
      matchedLevels.push({ level: level, words: matchedWords });
    }
  }

  displayVocabularyLevels(matchedLevels);
}

function displayVocabularyLevels(levels) {
 

  for (var i = 0; i < levels.length; i++) {
    var level = levels[i].level;
    var words = levels[i].words;
    CefrLevel.innerHTML = level;
    CefrWords.innerHTML = words.join(', ');
  }

}

</script>
